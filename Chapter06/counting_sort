def counting_sort(arr):
    if not arr:
        return arr

    max_val = max(arr)
    min_val = min(arr)
    range_of_elements = max_val - min_val + 1

    # Create a count array to store count of individual elements and initialize it to 0
    count = [0] * range_of_elements
    output = [0] * len(arr)

    # Store the count of each element
    for num in arr:
        count[num - min_val] += 1

    # Change count[i] so that count[i] contains the actual position of this element in the output array
    for i in range(1, len(count)):
        count[i] += count[i - 1]

    # Build the output array
    for num in reversed(arr):
        output[count[num - min_val] - 1] = num
        count[num - min_val] -= 1

    # Copy the output array to arr, so that arr contains sorted numbers
    for i in range(len(arr)):
        arr[i] = output[i]

    return arr

# Example usage
arr=[ 7,93 ,40 ,31, 55, 50, 89, 48, 80,  2, 80, 76, 16, 18,  4 , 1 ,17,  0, 17, 35,  7, 85, 75, 21,  57]
#arr = [4, 2, 2, 8, 3, 3]
sorted_arr = counting_sort(arr)
print("Sorted array:", sorted_arr)
