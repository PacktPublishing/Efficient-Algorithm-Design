class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None

    def insert(self, prev_node, new_data):
        new_node = Node(new_data)
        new_node.next = prev_node.next
        prev_node.next = new_node

    def update_node(self, old_data, new_data):
        temp = self.head
        while temp is not None:
            if temp.data == old_data:
                temp.data = new_data
                return
            temp = temp.next
    def print_list(self):
        temp = self.head
        while temp:
            print(temp.data, end=" -> ")
            temp = temp.next
        print("None")
    def search(self, key):
        temp = self.head
        while temp is not None:
            if temp.data == key:
                return True
            temp = temp.next
        return False
 

# Example usage:
llist = LinkedList()
llist.head = Node(1)
second = Node(2)
third = Node(4)
llist.head.next = second
second.next = third
llist.insert(second, 3)  # Inserts 3 between 2 and 4
llist.print_list()
# Example usage:
llist.update_node(2, 5)  # Updates node with value 2 to 5
llist.print_list()
# Example usage:
found = llist.search(3)  # Returns True if 3 is found  
print(found)
