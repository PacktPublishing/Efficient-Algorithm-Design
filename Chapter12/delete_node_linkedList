class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None

    def insert(self, prev_node, new_data):
        new_node = Node(new_data)
        new_node.next = prev_node.next
        prev_node.next = new_node

    def delete_node(self, key):
        temp = self.head

        if (temp is not None):
            if (temp.data == key):
                self.head = temp.next
                temp = None
            return

        while(temp is not None):
            if temp.data == key:
                break
            prev = temp
            temp = temp.next

        if(temp == None):
            return

        prev.next = temp.next
        temp = None

# Example usage:
llist = LinkedList()
llist.head = Node(1)
second = Node(2)
third = Node(4)

llist.head.next = second
second.next = third

llist.insert(second, 3)  # Inserts 3 between 2 and 4

# Example usage:
llist.delete_node(3)  # Deletes the node with value 3
